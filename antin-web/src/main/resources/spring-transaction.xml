<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<context:property-placeholder location="classpath:config.properties"/>
	<!-- 配置 druid数据源 -->
	<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>

		<!-- 初始化连接大小 -->
		<property name="initialSize" value="0"/>
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20"/>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20"/>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0"/>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60000"/>

		<property name="validationQuery" value="${validationQuery}"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<property name="testWhileIdle" value="true"/>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="25200000"/>

		<!-- 打开removeAbandoned功能 -->
		<property name="removeAbandoned" value="true"/>
		<!-- 1800秒，也就是30分钟 -->
		<property name="removeAbandonedTimeout" value="1800"/>
		<!-- 关闭abanded连接时输出错误日志 -->
		<property name="logAbandoned" value="true"/>

		<!-- 监控数据库 -->
		<!-- <property name="filters" value="stat" /> -->
		<property name="filters" value="mergeStat"/>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		  class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
		<!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
	</bean>

	<!-- 提供事务注解支持 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- 配置事务增强处理Bean，指定事务管理器 -->
	<!--    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
            &lt;!&ndash; 配置详细事务处理语义 &ndash;&gt;
            <tx:attributes>
                <tx:method name="insert*" propagation="REQUIRED"/>
                <tx:method name="update*" propagation="REQUIRED"/>
                <tx:method name="delete*" propagation="REQUIRED"/>

                <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
                <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
                <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
                <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>

                &lt;!&ndash; 其他采用默认事务方式 &ndash;&gt;
                <tx:method name="*"/>

            </tx:attributes>
        </tx:advice>

        &lt;!&ndash; Spring aop事务管理 &ndash;&gt;
        <aop:config>
            &lt;!&ndash; 配置切入点 &ndash;&gt;
            <aop:pointcut id="transactionPointcut"
                          expression="execution(* com.antin.service..*Impl.*(..))"/>
            &lt;!&ndash; 指定在txAdvice切入点应用txAdvice事务增强处理 &ndash;&gt;
            <aop:advisor pointcut-ref="transactionPointcut"
                         advice-ref="transactionAdvice"/>
        </aop:config>-->

</beans>